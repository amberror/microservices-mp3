spring.application.name=resource-service
server.port=8081

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/resource-db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate settings
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Eureka server URL
eureka.client.service-url.defaultZone=${EUREKA_REGISTRATION_URL:http://localhost:8761/eureka/}
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=40

# S3 bucket
resource.s3.url=${RESOURCE_S3_URL:http://localhost:4566}
resource.s3.region=${RESOURCE_S3_REGION:us-west-1}
resource.s3.accessKeyId=${RESOURCE_S3_ACCESS_KEY_ID:test}
resource.s3.secretAccessKey=${RESOURCE_S3_SECRET_ACCESS_KEY:test}

# Kafka general
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}

# Kafka producer
kafka.producer.resource.topic.name=${RESOURCE_PROCESSOR_TOPIC_NAME:resource-processor-topic}
kafka.resource.replication.factor=${RESOURCE_REPLICATION_FACTOR:1}
kafka.resource.partition.count=${RESOURCE_PARTITION_COUNT:1}
kafka.producer.resource.acks=${RESOURCE_ACKS_CONFIG:all}
kafka.producer.resource.reties=${RESOURCE_RETRIES:3}
kafka.producer.resource.maxInFlight=${RESOURCE_MAX_MESSAGES_IN_FLIGHT:5}
kafka.producer.resource.allRetriesTimeout=${RESOURCE_ALL_RETRIES_TIMEOUT:20000}
kafka.producer.resource.timeoutPerRequest=${RESOURCE_REQUEST_TIMEOUT:5000}
kafka.producer.resource.idempotence=${RESOURCE_PRODUCER_IDEMPOTENCE:true}

# Kafka consumer
kafka.consumer.resource-result.topic.name=${RESOURCE_RESULT_PROCESSOR_TOPIC_NAME:resource-processor-result-topic}
kafka.resource-result.consumer.group.id=${RESOURCE_RESULT_PROCESSOR_CONSUMER_GROUP_ID:resource-result-processors}
kafka.resource-result.consumer.auto.offset.reset=${RESOURCE_RESULT_PROCESSOR_OFFSET_RESET:earliest}

# Feign client config
feign.default.client.config.period=${DEFAULT_FEIGN_CLIENT_FIRST_RETRY_PERIOD:100}
feign.default.client.config.maxPeriod=${DEFAULT_FEIGN_CLIENT_MAX_RETRY_INTERVAL:1000}
feign.default.client.config.maxAttempts=${DEFAULT_FEIGN_CLIENT_RETRIES:3}

# Health check
eureka.client.healthcheck.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Circuit breaker
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5000ms
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3

resilience4j.circuitbreaker.instances.storageIntegrationCB.baseConfig=default

# Fallback
fallback.staging.bucket.name=resource-staging-bucket
fallback.permanent.bucket.name=resource-permanent-bucket

fallback.staging.bucket.path=/staging
fallback.permanent.bucket.path=/permanent